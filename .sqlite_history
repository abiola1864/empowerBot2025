    message_id TEXT UNIQUE,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);
-- Create user_products table
CREATE TABLE IF NOT EXISTS user_products (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    product_name TEXT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create explanation_history table
CREATE TABLE IF NOT EXISTS explanation_history (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    quiz TEXT,
    question_number INTEGER,
    explanation_count INTEGER DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create questions table
CREATE TABLE IF NOT EXISTS questions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    quiz TEXT,
    question TEXT,
    options TEXT,
    answer TEXT
);
-- Create user_scores table
CREATE TABLE IF NOT EXISTS user_scores (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER UNIQUE,
    phone_number TEXT UNIQUE,
    score INTEGER DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create followup_questions table
CREATE TABLE IF NOT EXISTS followup_questions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    question_id INTEGER,
    quiz_name TEXT,
    quiz_question TEXT,
    followup_question TEXT,
    followup_date DATETIME,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (question_id) REFERENCES questions(id)
);
-- Create quiz_states table
CREATE TABLE IF NOT EXISTS quiz_states (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    quiz TEXT,
    current_question INTEGER,
    completed BOOLEAN DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create post10_quiz_responses table
CREATE TABLE IF NOT EXISTS post10_quiz_responses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    quiz_id INTEGER,
    question_number INTEGER,
    response TEXT,
    FOREIGN KEY (quiz_id) REFERENCES post10_quizzes(id)
);
-- Create post10_quizzes table
CREATE TABLE IF NOT EXISTS post10_quizzes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    quiz_number INTEGER,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create records table
CREATE TABLE IF NOT EXISTS records (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    record_type TEXT,
    record_data TEXT,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
-- Create responses table
CREATE TABLE IF NOT EXISTS responses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER,
    quiz TEXT,
    question_number INTEGER,
    response TEXT,
    correct BOOLEAN,
    timestamp DATETIME,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
PRAGMA table_info(quiz_states);
ALTER TABLE quiz_states ADD COLUMN question_index INTEGER DEFAULT 0;
PRAGMA table_info(quiz_states);
ALTER TABLE quiz_states ADD COLUMN quiz_name TEXT;
ALTER TABLE quiz_states ADD COLUMN current_quiz TEXT;
ALTER TABLE quiz_states ADD COLUMN current_quiz TEXT;
PRAGMA table_info(quiz_states);
.exit
